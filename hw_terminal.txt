 1. Создайте текстоовый файл как в первом ДЗ по Terminal. 
" 111  ls -la
  112  cd GitHub
  113  ls -la
  114  cd Terminal
  115  cat > hw_terminal.txt
  116  ls -la
  117  cat hw_terminal.txt
  118  git status
  119  git add
  120  git add hw_terminal.txt
  121  git status
  122  git commit -m ""new txt file for hw about terminal""
  123  git status
  124  git push
  125  history
"


JSON
 4. Создать внешний репозиторий c названием JSON.
создано на сайте

 5. Клонировать репозиторий JSON на локальный компьютер.
"$ git clone https://github.com/evasnake/JSON.git
"
 6. Внутри локального JSON создать файл “new.json”.
$ touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
$ git commit -m "add new file json"

 9. Отправить файл на внешний GitHub репозиторий.
$ git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
$ vim new.json

 11. Отправить изменения на внешний репозиторий.
" 141  git status
  142  git add new.json
  143  git status
  144  git commit -m ""add new information to this file""
  145  git status
  146  git push
  147  git status
"

 12. Создать файл preferences.json
$ touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
$ vim preferences.json

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
$ vim skills.json

 15. Отправить сразу 2 файла на внешний репозиторий.
"   160  git add .
  161  git commit -am ""new files about preferences and skills""
  162  git push
  163  git status
"

 16. На веб интерфейсе создать файл bug_report.json.
в гите создан новый файл

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать кнопку сохранить

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
выполнено

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
выполнено

 20. Синхронизировать внешний и локальный репозиторий JSON
$ git pull


XML
 21. Создать внешний репозиторий c названием XML.
выполнено

 22. Клонировать репозиторий XML на локальный компьютер.
$ git clone https://github.com/evasnake/XML.git

 23. Внутри локального XML создать файл “new.xml”.
"$ cd XML
$ touch new.xml
"

 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
" 188  git status
  190  git add ""new.xml""
  191  git commit -m ""add new file by xml""
  192  git status
  193  git push
"
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
"$ vim new.xml
"
 28. Отправить изменения на внешний репозиторий.
"git status
  198  git add ""new.xml""
  199  git add new.xml
  200  git status
  201  git commit -m ""add new information to file xml""
  202  git status
  203  git push
"
 29. Создать файл preferences.xml
$ touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
$ vim preferences.xml

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
$ touch skills.xml

 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
"211  git status
  212  git add .
  213  git commit -am ""made 3 new files by xml""
  214  git push
"

 34. На веб интерфейсе создать файл bug_report.xml.
выполнено

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
выполнено

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
выполнено

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
выполнено

 38. Синхронизировать внешний и локальный репозиторий XML
$ git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
выполнено

 2. Клонировать репозиторий TXT на локальный компьютер.
"$ cd ..
$ git clone https://github.com/evasnake/TXT.git
"

 3. Внутри локального TXT создать файл “new.txt”.
 220  touch new.txt

 4. Добавить файл под гит.
"  221  git status
  222  git add new.txt
"

 5. Закоммитить файл.
"  223  git status
  224  git commit -m ""add new txt file""
"

 6. Отправить файл на внешний GitHub репозиторий.
" 225  git status
  226  git push
"

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 227  vim new.txt
 
8. Отправить изменения на внешний репозиторий.
" 228  git status
  229  git add new.txt
  230  git status
  231  git commit -m ""new information to text""
  232  git status
  233  git push
"

 9. Создать файл preferences.txt
 234  touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
  235  vim preferences.txt
 
11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
" 236  touch skills.txt
  237  vim skills.txt
"

 12. Сделать коммит в одну строку.
" 238  git status
  239  git add .
  240  git commit -am ""add 2 file""
"

 13. Отправить сразу 2 файла на внешний репозиторий.
 241  git push

 14. На веб интерфейсе создать файл bug_report.txt.
выполнено

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
выполнено

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
выполнено

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
выполнено

 18. Синхронизировать внешний и локальный репозиторий TXT
$ git pull
